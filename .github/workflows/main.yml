name: Upload Router Config

on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
      tags:
        description: 'Test scenario tags'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Install Make
        run: sudo apt-get install make

      - name: Build Config File
        run: make router.conf

      - name: Delete All Releases
        uses: actions/github-script@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          script: |
            const github = require('@actions/github');
            const octokit = github.getOctokit(process.env.GITHUB_TOKEN);
            const { owner, repo } = github.context.repo;

            async function deleteAllReleases() {
              const releases = await octokit.rest.repos.listReleases({ owner, repo });
              for (const release of releases.data) {
                await octokit.rest.repos.deleteRelease({ owner, repo, release_id: release.id });
              }
            }

            deleteAllReleases();

      - name: Create New Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v1.0.0
          release_name: k v1.0.0
          draft: false
          prerelease: false

      - name: Upload Config File
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./router4.conf
          asset_name: routes4.conf
          asset_content_type: text/plain
